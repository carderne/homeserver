version: "3.7"

volumes:
  lifx-volume:

services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "8898:9000"
    volumes:
      - ${PWD}/caddy/conf/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/caddy/conf/index.html:/index.html

  fava:
    container_name: fava
    build:
      context: fava
    restart: unless-stopped
    command: fava --host=0.0.0.0 --port=5000 /app/accounts/main.bean
    ports:
      - ${FAVA_PORT:-9004}:5000
    volumes:
      - ${PWD}/fava/data/accounts:/app/accounts

  books:
    container_name: books
    image: carderne/calibre-flask
    restart: unless-stopped
    volumes:
      - ${PWD}/books/data:/app/app/data
    ports:
      - 80:8000

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:0.6.19
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - DOCKER_MODS=linuxserver/mods:universal-calibre
    volumes:
      - ${PWD}/calibre-web/conf:/config
      - ${PWD}/books/data:/books
    ports:
      - 8999:8083
    restart: unless-stopped

  lifx:
    container_name: lifx
    image: carderne/lifx
    restart: unless-stopped
    volumes:
      - ${PWD}/lifx/conf:/app/conf
      - lifx-volume:/var/spool/cron/crontabs/
    environment:
      - LIFX_CONF=/app/conf
    ports:
      - 9000:8000
    depends_on:
      - lifx-daemon
      - lifx-cron

  lifx-daemon:
    container_name: lifx-daemon
    image: carderne/lifx
    restart: unless-stopped
    command: lifx-daemon
    volumes:
      - ${PWD}/lifx/conf:/app/conf
    environment:
      - LIFX_CONF=/app/conf

  lifx-cron:
    container_name: lifx-cron
    image: carderne/lifx
    restart: unless-stopped
    command: bash -c 'env >> /etc/environment && exec cron -f -L 2'
    init: true
    volumes:
      - ${PWD}/lifx/conf:/app/conf
      - lifx-volume:/var/spool/cron/crontabs/
    environment:
      - LIFX_CONF=/app/conf
      - LIFX_BIN=/usr/local/bin/lifx-cli

  transmission:
    container_name: transmission
    image: lscr.io/linuxserver/transmission:latest
    restart: unless-stopped
    volumes:
      - ${PWD}/transmission/conf:/config
      - ${PWD}/transmission/data:/downloads
    ports:
      - 9001:9091
      #- 51413:51413
      #- 51413:51413/udp
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - USER=${TRANSMISSION_USERNAME:-admin}
      - PASS=${TRANSMISSION_PASSWORD:-admin}
      - TRANSMISSION_WEB_HOME=/transmission-web-control/
    dns:
      - 9.9.9.9

  adguard:
    container_name: adguard
    image: adguard/adguardhome:v0.107.18
    restart: unless-stopped
    volumes:
      - ${PWD}/adguard/data:/opt/adguardhome/work
      - ${PWD}/adguard/conf:/opt/adguardhome/conf
    ports:
      - 0.0.0.0:53:53/tcp
      - 0.0.0.0:53:53/udp
      - 9002:80

  nextcloud:
    container_name: nextcloud
    image: nextcloud:25.0.0-apache
    restart: unless-stopped
    volumes:
      - ${PWD}/nextcloud/data/nextcloud:/var/www/html
    ports:
      - ${NEXTCLOUD_PORT:-9003}:80
    environment:
      - POSTGRES_HOST=db-nextcloud
      - REDIS_HOST=redis-nextcloud
      - POSTGRES_PASSWORD=tipi
      - POSTGRES_USER=tipi
      - POSTGRES_DB=nextcloud
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_USERNAME:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_PASSWORD:-admin}
      - NEXTCLOUD_HOSTNAME=${APP_DOMAIN:-box.local}
      - NEXTCLOUD_TRUSTED_DOMAINS=${APP_DOMAIN:-box.local}
      - TRUSTED_PROXIES=172.16.0.0/12
      - OVERWRITEHOST=${APP_DOMAIN:-box.local}:${NEXTCLOUD_PORT:-9003}
      - OVERWRITEPROTOCOL=${APP_PROTOCOL:-http}
    depends_on:
      - db-nextcloud
      - redis-nextcloud

  db-nextcloud:
    container_name: db-nextcloud
    image: postgres:14.2
    restart: on-failure
    volumes:
      - ${PWD}/nextcloud/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=tipi
      - POSTGRES_USER=tipi
      - POSTGRES_DB=nextcloud

  redis-nextcloud:
    container_name: redis-nextcloud
    image: redis:6.2.6
    restart: on-failure
    user: 1000:1000
    volumes:
      - ${PWD}/nextcloud/data/redis:/data

  cron:
    image: nextcloud:25.0.0-apache
    restart: on-failure
    volumes:
      - ${PWD}/nextcloud/data/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db-nextcloud
      - redis-nextcloud
